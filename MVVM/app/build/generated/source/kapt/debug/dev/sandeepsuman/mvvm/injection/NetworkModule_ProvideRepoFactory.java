// Generated by Dagger (https://dagger.dev).
package dev.sandeepsuman.mvvm.injection;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dev.sandeepsuman.mvvm.data.api.APIClient;
import dev.sandeepsuman.mvvm.data.repo.PersonRepo;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class NetworkModule_ProvideRepoFactory implements Factory<PersonRepo> {
  private final NetworkModule module;

  private final Provider<APIClient> apiClientProvider;

  public NetworkModule_ProvideRepoFactory(NetworkModule module,
      Provider<APIClient> apiClientProvider) {
    this.module = module;
    this.apiClientProvider = apiClientProvider;
  }

  @Override
  public PersonRepo get() {
    return provideRepo(module, apiClientProvider.get());
  }

  public static NetworkModule_ProvideRepoFactory create(NetworkModule module,
      Provider<APIClient> apiClientProvider) {
    return new NetworkModule_ProvideRepoFactory(module, apiClientProvider);
  }

  public static PersonRepo provideRepo(NetworkModule instance, APIClient apiClient) {
    return Preconditions.checkNotNullFromProvides(instance.provideRepo(apiClient));
  }
}
